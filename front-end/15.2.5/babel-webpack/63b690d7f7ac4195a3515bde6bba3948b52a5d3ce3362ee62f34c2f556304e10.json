{"ast":null,"code":"import { setTemplateEngine, getTemplateEngine } from '@syncfusion/ej2-base';\nimport { setValue, getValue } from '@syncfusion/ej2-base';\nvar stringCompiler = getTemplateEngine();\n/**\n * Angular Template Compiler\n */\nexport function compile(templateEle, helper) {\n  if (typeof templateEle === 'string') {\n    return stringCompiler(templateEle, helper);\n  } else {\n    var contRef_1 = templateEle.elementRef.nativeElement._viewContainerRef;\n    var pName_1 = templateEle.elementRef.nativeElement.propName;\n    //tslint:disable-next-line        \n    return function (data, component, propName) {\n      var context = {\n        $implicit: data\n      };\n      /* istanbul ignore next */\n      var conRef = contRef_1 ? contRef_1 : component.viewContainerRef;\n      var viewRef = conRef.createEmbeddedView(templateEle, context);\n      if (getValue('currentInstance.element.nodeName', conRef) === 'EJS-MENTION') {\n        viewRef.detectChanges();\n      } else {\n        viewRef.markForCheck();\n      }\n      /* istanbul ignore next */\n      var viewCollection = component && component.registeredTemplate ? component.registeredTemplate : getValue('currentInstance.registeredTemplate', conRef);\n      propName = propName && component.registeredTemplate ? propName : pName_1;\n      if (typeof viewCollection[propName] === 'undefined') {\n        viewCollection[propName] = [];\n      }\n      viewCollection[propName].push(viewRef);\n      return viewRef.rootNodes;\n    };\n  }\n}\n/**\n * Property decorator for angular.\n */\nexport function Template(defaultValue) {\n  return function (target, key) {\n    var propertyDescriptor = {\n      set: setter(key),\n      get: getter(key, defaultValue),\n      enumerable: true,\n      configurable: true\n    };\n    Object.defineProperty(target, key, propertyDescriptor);\n  };\n}\nfunction setter(key) {\n  return function (val) {\n    if (val === undefined) {\n      return;\n    }\n    setValue(key + 'Ref', val, this);\n    if (typeof val !== 'string') {\n      val.elementRef.nativeElement._viewContainerRef = this.viewContainerRef;\n      val.elementRef.nativeElement.propName = key;\n    } else {\n      if (this.saveChanges) {\n        this.saveChanges(key, val, undefined);\n        this.dataBind();\n      }\n    }\n  };\n}\nfunction getter(key, defaultValue) {\n  return function () {\n    /* istanbul ignore next */\n    return getValue(key + 'Ref', this) || defaultValue;\n  };\n}\n//tslint:disable-next-line\nsetTemplateEngine({\n  compile: compile\n});","map":{"version":3,"names":["setTemplateEngine","getTemplateEngine","setValue","getValue","stringCompiler","compile","templateEle","helper","contRef_1","elementRef","nativeElement","_viewContainerRef","pName_1","propName","data","component","context","$implicit","conRef","viewContainerRef","viewRef","createEmbeddedView","detectChanges","markForCheck","viewCollection","registeredTemplate","push","rootNodes","Template","defaultValue","target","key","propertyDescriptor","set","setter","get","getter","enumerable","configurable","Object","defineProperty","val","undefined","saveChanges","dataBind"],"sources":["C:/Users/pranavj/Desktop/learn angular/hotel_inventory_app/allinone_airbnb/node_modules/@syncfusion/ej2-angular-base/src/template.js"],"sourcesContent":["import { setTemplateEngine, getTemplateEngine } from '@syncfusion/ej2-base';\nimport { setValue, getValue } from '@syncfusion/ej2-base';\nvar stringCompiler = getTemplateEngine();\n/**\n * Angular Template Compiler\n */\nexport function compile(templateEle, helper) {\n    if (typeof templateEle === 'string') {\n        return stringCompiler(templateEle, helper);\n    }\n    else {\n        var contRef_1 = templateEle.elementRef.nativeElement._viewContainerRef;\n        var pName_1 = templateEle.elementRef.nativeElement.propName;\n        //tslint:disable-next-line        \n        return function (data, component, propName) {\n            var context = { $implicit: data };\n            /* istanbul ignore next */\n            var conRef = contRef_1 ? contRef_1 : component.viewContainerRef;\n            var viewRef = conRef.createEmbeddedView(templateEle, context);\n            if (getValue('currentInstance.element.nodeName', conRef) === 'EJS-MENTION') {\n                viewRef.detectChanges();\n            }\n            else {\n                viewRef.markForCheck();\n            }\n            /* istanbul ignore next */\n            var viewCollection = (component && component.registeredTemplate) ?\n                component.registeredTemplate : getValue('currentInstance.registeredTemplate', conRef);\n            propName = (propName && component.registeredTemplate) ? propName : pName_1;\n            if (typeof viewCollection[propName] === 'undefined') {\n                viewCollection[propName] = [];\n            }\n            viewCollection[propName].push(viewRef);\n            return viewRef.rootNodes;\n        };\n    }\n}\n/**\n * Property decorator for angular.\n */\nexport function Template(defaultValue) {\n    return function (target, key) {\n        var propertyDescriptor = {\n            set: setter(key),\n            get: getter(key, defaultValue),\n            enumerable: true,\n            configurable: true\n        };\n        Object.defineProperty(target, key, propertyDescriptor);\n    };\n}\nfunction setter(key) {\n    return function (val) {\n        if (val === undefined) {\n            return;\n        }\n        setValue(key + 'Ref', val, this);\n        if (typeof val !== 'string') {\n            val.elementRef.nativeElement._viewContainerRef = this.viewContainerRef;\n            val.elementRef.nativeElement.propName = key;\n        }\n        else {\n            if (this.saveChanges) {\n                this.saveChanges(key, val, undefined);\n                this.dataBind();\n            }\n        }\n    };\n}\nfunction getter(key, defaultValue) {\n    return function () {\n        /* istanbul ignore next */\n        return getValue(key + 'Ref', this) || defaultValue;\n    };\n}\n//tslint:disable-next-line\nsetTemplateEngine({ compile: compile });\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}